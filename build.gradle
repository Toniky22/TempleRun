buildscript {
    

    repositories {
        mavenLocal()
        //mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        classpath 'org.wisepersist:gwt-gradle-plugin:1.0.6'
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.5'
        

    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "TempleRun"
        gdxVersion = '1.9.9'
        roboVMVersion = '2.3.5'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }

    repositories {
        mavenLocal()
        //mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        implementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
        //necesario para que funcione en movil
        implementation 'com.android.support:multidex:1.0.3'
        
    }
}

project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"


    dependencies {
        implementation project(":core")
        implementation "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        implementation "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        implementation "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
        implementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-ios"
        
    }
}

project(":html") {
    apply plugin: "gwt"
    apply plugin: "war"


    dependencies {
        implementation project(":core")
        implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
        implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion:sources"
        implementation "com.badlogicgames.gdx:gdx-box2d-gwt:$gdxVersion:sources"
        
    }
}

project(":core") {
    apply plugin: "java"

    dependencies {
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"

        // We also had to do some shenanigans to prevent a version conflict
        implementation ('com.googlecode.json-simple:json-simple:1.1.1') {
            exclude module: 'junit'
        }
    }

    task packTextures {
        def pack = new File("${rootProject.getRootDir()}/android/assets/images/templerun.pack.png")
        def atlas = new File("${rootProject.getRootDir()}/android/assets/images/templerun.pack.atlas")

        inputs.dir "${rootProject.getRootDir()}/core/rawAssets/sprites"
        outputs.file "${rootProject.getRootDir()}/android/assets/images/templerun.pack.png"
        outputs.file "${rootProject.getRootDir()}/android/assets/images/templerun.pack.atlas"

        /*doLast {
            pack.delete()
            atlas.delete()
            //TexturePacker.process("${rootProject.getRootDir()}/core/rawAssets/sprites", "${rootProject.getRootDir()}/android/assets/images", "templerun.pack")
        }*/
    }

    task copyLevels(type: Copy){
        from "../Levels/TempleRunLevels/scenes"
        into "../android/assets/levels"
        exclude "MainScene.dt"
    }

    project.tasks.compileJava.dependsOn packTextures
    project.tasks.compileJava.dependsOn copyLevels

}

tasks.eclipse.doLast {
    delete ".project"
}